
kotlin {
    targets {
        fromPreset(presets.macosX64, 'macosX64') {
            /* You can specify additional settings for the 'linux' target here */
        }
    }
    sourceSets {
        nativeCommonMain {
            dependencies {

            }
        }
        macosX64Main {
            dependencies {
                dependsOn nativeCommonMain
            }
        }
    }
}
// to provide a gradle run for the native application

def targets = ['macosX64']

for (target in targets) {
    kotlin.targets[target].compilations.main.outputKinds("EXECUTABLE")
    //would like to define the entry point here !
}

afterEvaluate {
    // runMingwX64Main, runLinuxX64Main, runMacosX64Main
    for (target in targets) {
        String taskName = "copyResourcesToExecutable_${target}"
        def targetTestTask = tasks.getByName("${target}Test")
        tasks.create(name: taskName, type: Copy) {
            for (sourceSet in kotlin.sourceSets) {
                from sourceSet.resources
            }
            into new File(targetTestTask.inputs.properties.executable).parentFile
        }
        targetTestTask.dependsOn(taskName)
    }
}
